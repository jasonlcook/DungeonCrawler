@if (DungeonTiles.Count() == 0 && DungeonDepth == 0) {
    <div id="dungeon">
        <div class="loading">
            <img src="/images/tiles/blue/base_tile.png" />
        </div>
    </div>
} else {
    currentTile = DungeonTiles.Where(t => t.Current == true).First();
    <div id="dungeon" style=@getTileGroupPosition(currentTile.Row, currentTile.Column).ToDungonStyle()>
        @foreach (var tile in DungeonTiles) {
            string element = $"{tile.Row}, {tile.Column}";
            string colourClass = @getColourClass(DungeonDepth);

            <div class="hexagon-tile-group" style=@getTileGroupPosition(tile.Row, tile.Column).ToTileGroupStyle()>
                <div class="hexagon-tile @colourClass hexagon-tile-base"></div>

                @if (tile.Current) {
                    <div class="hexagon-tile hexagon-tile-current"></div>
                }

                @if (tile.Selectable) {
                    string selectableClass = "hexagon-tile-selectable";
                    @if (tile.Hidden) {
                        selectableClass = "hexagon-tile-hidden-selectable";
                    }

                    <div class="hexagon-tile @colourClass @selectableClass">
                        <span @onclick="@(() => CallParentSelectedTileFunction(tile.Id))"></span>
                    </div>
                }

                @if (tile.Hidden) {
                    <div class="hexagon-tile hexagon-tile-hidden"></div>
                } else {
                    <div class="hexagon-tile @colourClass @getTypeClass(HighlightAscending, tile.Type)"></div>

                    //todo: add DungeonTile.Discoverd so when the Adventurer dies fog of war can be applied to the unhidden undiscoverd tiles
                    @if (!tile.Current && !tile.Selectable) {
                        <div class="hexagon-tile hexagon-for-of-war"></div>
                    }
                }

                <div style="color: #fff; text-align: center; width: 100px; position: absolute;">
                    @element
                </div>

                @if (tile.Monsters.Count > 0) {
                    foreach (Monster monster in tile.Monsters) {
                        string monsterTop = $"{monster.ClientY}px";
                        string monsterLeft = $"{monster.ClientX}px";

                        <span class="monster-counter" style="top: @monsterTop; left: @monsterLeft;">
                            <span class="monster-counter-health">
                                @monster.Health
                            </span>
                        </span>
                    }
                }
            </div>
        }
    </div>
}