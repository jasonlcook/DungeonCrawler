<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorDungeonNoFound" xml:space="preserve">
    <value>REQUESTED DUNGEON COULD NOT BE FOUND.</value>
  </data>
  <data name="ErrorTokenNoFound" xml:space="preserve">
    <value>REQUESTED TOKEN COULD NOT BE FOUND.</value>
  </data>
  <data name="MessageAdventureDamage" xml:space="preserve">
    <value>ADVENTURER DAMAGE: [ADVENTURER_DAMAGE].</value>
  </data>
  <data name="MessageAdventureDexterity" xml:space="preserve">
    <value>ADVENTURER DEXTERITY: [ADVENTURER_DEXTERITY].</value>
  </data>
  <data name="MessageAdventureGeneration" xml:space="preserve">
    <value>ADVENTURE GENERATION.</value>
  </data>
  <data name="MessageAdventureHealth" xml:space="preserve">
    <value>ADVENTURER HEALTH: [ADVENTURER_HEALTH].</value>
  </data>
  <data name="MessageAdventureProtection" xml:space="preserve">
    <value>ADVENTURER PROTECTION: [ADVENTURER_PROTECTION].</value>
  </data>
  <data name="MessageAdventurerAttackHits" xml:space="preserve">
    <value>ADVENTURER ATTACK: MONSTER HIT FOR [MONSTER_WOUNDS_RECEIVED] WITH [MONSTER_HEALTH_REMAINING] REMAINING.</value>
  </data>
  <data name="MessageAdventurerCombatInitiation" xml:space="preserve">
    <value>ADVENTURER ROLL: [ADVENTURER_COMBAT_INITIATION].</value>
  </data>
  <data name="MessageAdventurerFleeFail" xml:space="preserve">
    <value>ADVENTURER FAILED TO FLEE.</value>
  </data>
  <data name="MessageAdventurerFleeSuccess" xml:space="preserve">
    <value>ADVENTURER FLEES COMBAT.</value>
  </data>
  <data name="MessageAdventurerInitiatesCombat" xml:space="preserve">
    <value>ADVENTURER INITIATES COMBAT.</value>
  </data>
  <data name="MessageAdventurerLevelUp" xml:space="preserve">
    <value>NEW LEVEL ([ADVENTURER_CURRENT_DAMAGE]).</value>
  </data>
  <data name="MessageAdventurerLevelUpDamage" xml:space="preserve">
    <value>NEW DAMAGE [ADVENTURER_DAMAGE] (+ [ADVENTURER_DAMAGE_ADDITION]).</value>
  </data>
  <data name="MessageAdventurerLevelUpHealth" xml:space="preserve">
    <value>NEW HEALTH [ADVENTURER_HEALTH] (+ [ADVENTURER_HEALTH_ADDITION]).</value>
  </data>
  <data name="MessageAdventurerLevelUpProtection" xml:space="preserve">
    <value>NEW PROTECTION [ADVENTURER_PROTECTION] (+ [ADVENTURER_PROTECTION_ADDITION]).</value>
  </data>
  <data name="MessageAdventurerWiff" xml:space="preserve">
    <value>ADVENTURER ATTACK: NO DAMAGE DONE TO MONSTER.</value>
  </data>
  <data name="MessageAdventurerWiffDetails" xml:space="preserve">
    <value>ADVENTURER DAMAGE ([ADVENTURER_DAMAGE]) MONSTER PROTECTION ([MONSTER_PROTECTION])</value>
  </data>
  <data name="MessageArmourCondition" xml:space="preserve">
    <value>ARMOUR CONDITION: [ARMOUR_CONDITION] (ROLL: [ARMOUR_CONDITION_VALUE]).</value>
  </data>
  <data name="MessageArmourEquipped" xml:space="preserve">
    <value>PICKUP A [ARMOUR_DESCRIPTION].</value>
  </data>
  <data name="MessageArmourRejected" xml:space="preserve">
    <value>REJECTED A [ARMOUR_DESCRIPTION].</value>
  </data>
  <data name="MessageArmourType" xml:space="preserve">
    <value>ARMOUR TYPE: [ARMOUR_TYPE] (ROLL: [ARMOUR_TYPE_VALUE]).</value>
  </data>
  <data name="MessageArmourValue" xml:space="preserve">
    <value>ARMOUR VALUE: [ARMOUR_VALUE] ([ARMOUR_TYPE_VALUE] * [ARMOUR_CONDITION_VALUE]).</value>
  </data>
  <data name="MessageAttacksMiss" xml:space="preserve">
    <value>NO DAMAGE DONE</value>
  </data>
  <data name="MessageDungeonDepth" xml:space="preserve">
    <value>DUNGEON DEPTH [INCREASED_DEPTH] DISCOVERED.</value>
  </data>
  <data name="MessageDungeonExitFail" xml:space="preserve">
    <value>NO MACGUFFIN. GO FIND IT!</value>
  </data>
  <data name="MessageDungeonExitSuccess" xml:space="preserve">
    <value>WELL DONE.</value>
  </data>
  <data name="MessageEndOfGameFightsFleed" xml:space="preserve">
    <value>FIGHTS FLED [FIGHTS_FLED].</value>
  </data>
  <data name="MessageEndOfGameFightsTotal" xml:space="preserve">
    <value>FLOOR [FLOOR_DEPTH]: FIGHTS [FIGHTS_TOTAL].</value>
  </data>
  <data name="MessageEndOfGameFightsWon" xml:space="preserve">
    <value>FIGHTS WON [FIGHTS_WON].</value>
  </data>
  <data name="MessageEndOfGameFloorDetails" xml:space="preserve">
    <value>FLOOR [FLOOR_DEPTH]: DISCOVERED TILES [FLOOR_TILES_FOUND] / [FLOOR_TILES_TOTAL].</value>
  </data>
  <data name="MessageEndOfGameFloors" xml:space="preserve">
    <value>[FLOORS_DISCOVERED] FLOORS DISCOVERED.</value>
  </data>
  <data name="MessageEndOfGameLootedChests" xml:space="preserve">
    <value>FLOOR [FLOOR_DEPTH]: CHESTS LOOTED [CHESTS_LOOTED].</value>
  </data>
  <data name="MessageEndOfGameLootedPotions" xml:space="preserve">
    <value>POTIONS TAKEN [POTIONS_LOOTED]</value>
  </data>
  <data name="MessageEndOfGameLootedProtection" xml:space="preserve">
    <value>PROTECTION TAKEN [PROTECTION_LOOTED]</value>
  </data>
  <data name="MessageEndOfGameLootedWepons" xml:space="preserve">
    <value>WEAPONS TAKEN [WEAPONS_LOOTED].</value>
  </data>
  <data name="MessageFinalBossFightLost" xml:space="preserve">
    <value>ADVENTURER ATTACK: MONSTER KILLED WITH [MONSTER_WOUNDS_RECEIVED].</value>
  </data>
  <data name="MessageFinalBossFightWon" xml:space="preserve">
    <value>ADVENTURER ATTACK: BOSS KILLED FIND YOUR WAY OUT.</value>
  </data>
  <data name="MessageFinalBossGeneration" xml:space="preserve">
    <value>YOU HAVE UNCOVERED THE LAIR OF THE [BOSS_NAME].</value>
  </data>
  <data name="MessageMonsterAttackHit" xml:space="preserve">
    <value>MONSTER ATTACK: ADVENTURER HIT FOR [ADVENTURER_WOUNDS] WITH [ADVENTURER_HEALTH] REMAINING.</value>
  </data>
  <data name="MessageMonsterAttackHitDamage" xml:space="preserve">
    <value>MONSTER DAMAGE [MONSTER_DAMAGE] ADVENTURER PROTECTION [ADVENTURER_PROTECTION].</value>
  </data>
  <data name="MessageMonsterAttackNoDamage" xml:space="preserve">
    <value>MONSTER ATTACK: NO DAMAGE DONE TO ADVENTURER.</value>
  </data>
  <data name="MessageMonsterCampMultiple" xml:space="preserve">
    <value>MONSTER CAMP: [MONSTER_COUNT] [MONSTER_NAME]s.</value>
  </data>
  <data name="MessageMonsterCampSingle" xml:space="preserve">
    <value>MONSTER CAMP: A [MONSTER_NAME].</value>
  </data>
  <data name="MessageMonsterCombatInitiation" xml:space="preserve">
    <value>MONSTER ROLL: [MONSTER_COMBAT_INITIATION].</value>
  </data>
  <data name="MessageMonsterDamage" xml:space="preserve">
    <value>MONSTER DAMAGE: [MONSTER_DAMAGE].</value>
  </data>
  <data name="MessageMonsterGeneration" xml:space="preserve">
    <value>[MONSTER_TYPE]</value>
  </data>
  <data name="MessageMonsterHealth" xml:space="preserve">
    <value>MONSTER HEALTH: [MONSTER_HEALTH].</value>
  </data>
  <data name="MessageMonsterInitiatesCombats" xml:space="preserve">
    <value>MONSTER INITIATES COMBAT.</value>
  </data>
  <data name="MessageMonsterKilledAdventure" xml:space="preserve">
    <value>MONSTER ATTACK: ADVENTURER DIED WITH [ADVENTURER_WOUNDS] WOUNDS.</value>
  </data>
  <data name="MessageMonsterLostDexterityRoll" xml:space="preserve">
    <value>MONSTER ATTACK: ADVENTURER DEXTERITY [ADVENTURER_DEXTERITY] WINS OVER MONSTER DEXTERITY [MONSTER_DEXTERITY]</value>
  </data>
  <data name="MessageMonsterProtection" xml:space="preserve">
    <value>MONSTER PROTECTION: [MONSTER_PROTECTION].</value>
  </data>
  <data name="MessageMonsterWinsDexterityRoll" xml:space="preserve">
    <value>MONSTER ATTACK: MONSTER DEXTERITY [MONSTER_DEXTERITY] WINS OVER ADVENTURER DEXTERITY [ADVENTURER_DEXTERITY]</value>
  </data>
  <data name="MessagePotionDrink" xml:space="preserve">
    <value>POTION: [POTION_DESCRIPTION].</value>
  </data>
  <data name="MessagePotionDuration" xml:space="preserve">
    <value>POTION DURATION:  [POTION_DURATION] (ROLL: [POTION_DURATION_VALUE]).</value>
  </data>
  <data name="MessagePotionSize" xml:space="preserve">
    <value>POTION SIZE:  [POTION_SIZE] (ROLL: [POTION_SIZE_VALUE]).</value>
  </data>
  <data name="MessagePotionType" xml:space="preserve">
    <value>POTION TYPE:  [POTION_TYPE] (ROLL: [POTION_TYPE_VALUE]).</value>
  </data>
  <data name="MessageWanderingMonsterMultiple" xml:space="preserve">
    <value>WANDERING MONSTER: [MONSTER_COUNT] [MONSTER_NAME]s.</value>
  </data>
  <data name="MessageWanderingMonsterSingle" xml:space="preserve">
    <value>WANDERING MONSTER: A [MONSTER_NAME].</value>
  </data>
  <data name="MessageWeaponCondition" xml:space="preserve">
    <value>WEAPONS CONDITION: [WEAPON_CONDITION] (ROLL: [WEAPON_CONDITION_VALUE]).</value>
  </data>
  <data name="MessageWeaponEquipped" xml:space="preserve">
    <value>PICKUP A [WEAPON_DESCRIPTION].</value>
  </data>
  <data name="MessageWeaponRejected" xml:space="preserve">
    <value>REJECTED A [WEAPON_DESCRIPTION].</value>
  </data>
  <data name="MessageWeaponType" xml:space="preserve">
    <value>WEAPON TYPE: [WEAPON_TYPE] (ROLL: [WEAPON_TYPE_VALUE]).</value>
  </data>
  <data name="MessageWeaponValue" xml:space="preserve">
    <value>WEAPON VALUE: [WEAPON_VALUE] ([WEAPON_TYPE_VALUE] * [WEAPON_CONDITION_VALUE]).</value>
  </data>
</root>